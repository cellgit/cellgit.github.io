<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[The Summer Palace]]></title>
      <url>%2F2018%2F09%2F24%2F016TheSummerPalace%2F</url>
      <content type="text"><![CDATA[Sun, Sep 24, 2018, ShaHe University Park, BeiJing : 北京昌平沙河高教园Photos date: Sat, Sep 23, 2018. Device: iPhoneXThe Summer Palace]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Daily of iOS Develop, 2018]]></title>
      <url>%2F2018%2F09%2F08%2FDaily%20of%20iOS%20Develop%2C%202018%2F</url>
      <content type="text"><![CDATA[Tip: 2018, Develop With Swift Saturday, Sep 8, 2018, ShaHe University Park, BeiJing : 北京昌平沙河高教园1. CampusSafe:HUI安全(校园安全)12345678910Main Function: 1. Play Video: BMPlayer (Third Lib) 2. Speech to Text: SpeechKit (Apple) 3. Photos Upload 4. Location: GaoDe Map (Third Lib) 5. Calendar: JTAppleCalendar (Third Lib) 6. Community: SKPhotoBrowser (Third Lib) 7. Keyword Search 8. Message: JPush (Third Lib) 9. Others ... ... 2. 高护网123456789101112131415Main Function: 1. Pay: Alipay, WeiXinPay 2. Repay: Bank Card Repay 3. Coupon: 优惠券 4. Platform Ticket: 平台前程票 5. Instalments: 分期还款 6. Recharge: 充值Ticket 7. Cash Withdrawal: 提现 8. Calendar: JTAppleCalendar (Third Lib) 9. Live: VhallLive (Third Lib) 10. Play Video: BMPlayer (Third Lib) 11. Star Score: 评分 12. Share: UShare (不好用) 13. Collect: 收藏 14. Follow: 关注 3. 油站梦工厂]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Swift 开发中常用的第三方库]]></title>
      <url>%2F2018%2F08%2F25%2FSwift%E5%BC%80%E5%8F%91%E4%B8%AD%E4%BD%BF%E7%94%A8%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%2F</url>
      <content type="text"><![CDATA[Saturday, August 25, 2018 于北京昌平沙河高教园1. YPImagePicker : 照片和视频选择器2. SKPhotoBrowser : 照片浏览器]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[你好 2018]]></title>
      <url>%2F2017%2F12%2F31%2F2017%E6%82%84%E7%84%B6%E8%BF%87%E5%8E%BB%2C2018%E7%AA%81%E7%84%B6%E6%9D%A5%E4%B8%B4%2F</url>
      <content type="text"><![CDATA[今天是2017年12月31号一年三百多天,时间流逝很快,不知不觉间已经捉到了2017的尾巴,今天以前如梦如幻,过去了就不会再回来。用文字记录下此刻，托管到GitHub就是希望留住时间的印记。 这一年，我在北京在北京又渡过一年时光，北京两千多万人口，自己身在其中，感觉渺小到如沧海一粟。城市的快速发展让有关部门不得不采取限制人口的政策。我住在昌平，地铁绝对是最方便的交通工具，很少搭乘公交汽车。自从限制人口的措施实施以来，地铁昌平线给人的感觉是更挤了：原来从沙河高教园上车还很轻松，这段时间以来感觉上车要用挤的方式才能上去，到了下一站“沙河”，就要练就一身挤地铁的本事才能上去。原因大概是其它地方的人因拆迁搬到这边不少，这边房租相对便宜很多。我们是四个人租的四室一厅，四千块钱，房间虽然不是太大，但是还可以，总体来说还不错。 这一年年底我辞职了公司与个人就是一个命运共同体。2017年的12月22号，公司宣布停业了。随之我和其他几个职员申请了离职，于25号（周一）办理了离职手续。我认为这个时间离职很特别，圣诞节离职，下接元旦节，不久就是春节，时间点让人尴尬。《道友，你好》是我们开发的游戏，随着公司的停业，上线的希望越来越小了。项目包括Unity和手机原生开发，手机原生开发LBS作为游戏的辅助部分，楠哥负责安卓，我负责iOS，雄哥是组长。一年的时间聚在一起，年底我们散伙了，各寻前程，祝你们2018比2017过的更好。 许愿2018再过一个多小时就到2018了，给自己许一个小小的愿望，让时间记住着期许。愿自己脚踏实地，仰望星空，踏踏实实提高自己的技术，并且保存着一颗奋斗的心，不管时间如何飞逝，奋斗的心不能流逝,不负好时光。2018给自己定一个小目标：让自己的技术达到相对全面的水平。 2017写于北京市昌平区沙河高教园 你好，2018 2017年12月31日 23:32 记住这一刻]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[RAC-响应式编程之初体验]]></title>
      <url>%2F2017%2F10%2F25%2FRAC-%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%88%9D%E4%BD%93%E9%AA%8C(OC)%2F</url>
      <content type="text"><![CDATA[一.体验步骤: 准备工作 12341. 新建一个Xcode工程:RACDemo0012. pod init3. 在podfile文件里加上 pod ‘ReactiveObjC’ 4. 终端输入: pod install,完成后重新打开程序,准备写代码 开始体验(编写一个类似密码输入的UI:但并不是)123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081821. 首先导入头文件: #import &lt;ReactiveObjC.h&gt;2. 代码正文:- (void)viewDidLoad &#123; [super viewDidLoad]; [self firstRAC];&#125;- (void)firstRAC &#123; UITextField *textField = [[UITextField alloc]initWithFrame:CGRectMake(self.view.center.x - 100, 100, 200, 40)]; [self.view addSubview:textField]; textField.borderStyle = UITextBorderStyleRoundedRect; textField.text = @""; textField.placeholder = @"请输入密码"; textField.secureTextEntry = YES; NSMutableArray &lt;UILabel *&gt;*arrayM = [NSMutableArray array]; for (NSInteger i = 0; i&lt;=3; i++) &#123; UILabel *label = [[UILabel alloc]init]; label.tag = i; label.backgroundColor = [UIColor clearColor]; [self.view addSubview:label]; label.frame = CGRectMake(self.view.center.x + i*51 - 100, 150, 47, 10); [arrayM addObject:label]; &#125; UILabel *tipLabel = [[UILabel alloc]init]; [self.view addSubview:tipLabel]; tipLabel.frame = CGRectMake(self.view.center.x - 100, 170, 200, 10); tipLabel.font = [UIFont systemFontOfSize:11]; tipLabel.textColor = [UIColor greenColor]; tipLabel.text = @""; ///核心代码 [[textField rac_signalForControlEvents:UIControlEventEditingChanged] subscribeNext:^(id x)&#123; NSLog(@"textField.text========%@", textField.text); NSInteger j = textField.text.length; NSInteger k = 0; if (j &lt;= 0) &#123; tipLabel.text = @""; k=0; &#125; else if (j&gt;0 &amp;&amp; j&lt;=6) &#123; k = 1; &#125; else if (j&gt;6 &amp;&amp; j&lt;=9) &#123; k=2; &#125; else if (j&gt;9 &amp;&amp; j&lt;=12) &#123; k=3; &#125; else if (j&gt;12 &amp;&amp; j&lt;=15) &#123; k=4; &#125; else &#123; return ; &#125; for (NSInteger i = 0; i &lt; 4; i++) &#123; if (i &lt;= k - 1) &#123; arrayM[i].backgroundColor = [UIColor magentaColor]; if (k == 1) &#123; tipLabel.text = @"密码太弱"; tipLabel.textColor = [UIColor grayColor]; &#125; else if (k==2) &#123; tipLabel.text = @"密码一般"; tipLabel.textColor = [UIColor orangeColor]; &#125; else if (k==3) &#123; tipLabel.text = @"密码较强"; tipLabel.textColor = [UIColor redColor]; &#125; else if (k==4) &#123; tipLabel.text = @"密码非常强"; tipLabel.textColor = [UIColor purpleColor]; &#125; &#125; else &#123; arrayM[i].backgroundColor = [UIColor clearColor]; &#125; &#125; &#125;];&#125; ——–效果图:]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[根据一个数值寻找数组中最接近这个数值的对象]]></title>
      <url>%2F2017%2F10%2F24%2F%E6%A0%B9%E6%8D%AE%E4%B8%80%E4%B8%AA%E6%95%B0%E5%80%BC%E5%AF%BB%E6%89%BE%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9C%80%E6%8E%A5%E8%BF%91%E8%BF%99%E4%B8%AA%E6%95%B0%E5%80%BC%E7%9A%84%E5%AF%B9%E8%B1%A1%2F</url>
      <content type="text"><![CDATA[问题描述:根据地图的层级(mapView.zoomLevel),在数组内寻找到最接近这个层级的数值123456789101112131415161718- (NSInteger)getMinValueShowLevel:(NSArray *)showLevels mapZoomLevel:(CGFloat)mapZoomLevel&#123; NSInteger suitValue = (int)mapZoomLevel; NSInteger diffLevel = 9999; for (NSNumber *showLevel in showLevels) &#123; NSInteger diffLevelTmp = fabs(mapZoomLevel - [showLevel intValue]); if (diffLevelTmp &lt; diffLevel) &#123; diffLevel = diffLevelTmp; suitValue = [showLevel intValue]; &#125; &#125; return suitValue;&#125;注:代码中showLevels:存有数值对象,如: showLevels = @[@(12), @(7), @(9)];suitValue:找到的最合适的值diffLevel:层级差mapZoomLevel:参照层级,根据这个层级,找到数组中最接近这个数的值]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[CocoaPods安装]]></title>
      <url>%2F2017%2F10%2F24%2FCocoaPods%E5%AE%89%E8%A3%85%2F</url>
      <content type="text"><![CDATA[安装环境:使用VPN 查看ruby版本: 1ruby -v 如果版本小于2.2.2,升级ruby:我用的是2.2.4,其它版本可能会安装失败1rvm install 2.2.4 设置2.2.2版本为默认版本 1rvm use 2.2.2 --default 安装cocoapods 1sudo gem install cocoapods 设置启动cocoapods 1pod setup 安装完成]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[iOS原生工程接入Unity导出的Xcode工程]]></title>
      <url>%2F2017%2F10%2F24%2FiOS%E5%8E%9F%E7%94%9F%E5%B7%A5%E7%A8%8B%E6%8E%A5%E5%85%A5Unity%E5%AF%BC%E5%87%BA%E7%9A%84Xcode%E5%B7%A5%E7%A8%8B%2F</url>
      <content type="text"><![CDATA[提示:2017年7月13日更新 相关文章:1&gt;. IL2CPP 构建大小优化 前言:项目iOS原生工程是LBS的开发,在iOS原生和Unity的Xcode工程进行整合方面,网上多是将Unity的Xcode工程导入到自己的原生项目中,而对于iOS原生工程接入Unity导出的Xcode工程几乎找不到,虽然相对更简单.第一次整合iOS-Unity项目,会报很多错误,报到让自己怀疑人生.还好,最终找到了一个很简单的整合流程.项目要求不一样,过程也许不同,不过,万一对你有帮助,就会省去很多时间.文章旨在帮助还在iOS-Unity整合的路上苦苦挣扎的程序员脱离错误的红海,同时详细记录自己的实现步骤. 注意:在选择 Mono2x 和 IL2CPP 时操作步骤稍有不同: Mono2x 导出工程后只需要在 build settings 将 HEADER_SEARCH_PATHS 添加 $(inherited),其余不可以修改,否则可能会报错误;在 IL2CPP 设置状态下,可以将警告(在下文)内容全部在 build settings 中对应设置.前提条件: 1. 工程是以Unity工程为主,如游戏的开发. 2. 我使用了cocoapods,如果不知道,这个将是你填的一个天坑.详细步骤放入下:为了展现更直接,主要以截图呈现1.Unity导出Xcode工程前的设置1: 2.Unity导出Xcode工程前的设置2: 3.Unity导出Xcode工程前的设置3:CompanyName和ProductName根据自己项目填写 4.Unity导出Xcode工程前的设置4:注意:最好用你之前原生项目的Bundle Identifier,因为,你的项目中也许用到了第三方,在第三方的后台已经填写了Bundle Identifier 5.Unity导出Xcode工程前的设置5:最好把这一项选上 6.Unity导出Xcode工程前的设置6:如果你的Unity工程没有不兼容的地方,应该很顺利导出,如果出现Unity的代码或资源不兼容,赶快找相关负责人进行解决,我的就出现了代码和图片资源的报错 7.Unity的Xcode工程导出成功后,打开终端,切换到对应的根目录:如图中的client 8.pod init 创建podfile文件 9.打开podfile文件,按格式写入需要pod的第三方库,我用到的第三方库如下: 12345678910111213platform :ios, '8.0'target 'Unity-iPhone' dopod 'AMap3DMap'pod 'AMapLocation'pod 'AMapSearch'pod 'Masonry'pod 'pop'pod 'AFNetworking'pod 'YYModel'end 10.打开终端,pod install,完成之后会看到如下图所示的黄色字体的警告: Smart quotes的警告是因为我们操作podfile文件用的是文本格式,如果想去掉这个警告,可以使用sublime或Xcode操作podfile文件,保证podfile文件的单引号是英文格式的.特别重要的是以下Release(一定要设置Release状态,其它状态可以设置也可以不设置) 状态下的四个警告,其中”HEADER_SEARCH_PATHS”最重要,这个一定要在BuildSettings中添加一个$(inherited)依次在BuildSettings中找到:Other_CFLAGS和OTHER_LDFLAGS,并分别添加$(inherited)如果添加这三项后没有报错,就可以了,但是如果依然有报错,就将BuildSettings中的ARCHS也添加$(inherited),之后如果再有报错,就要看报错内容具体是什么. 11.打开白色的workspace(工作空间)文件,运行,看是否报错,我运行的时候报错是我的iPhone版本低,将Xcode运行的手机系统版本设置降低到小于等于你的设备的iOS系统版本即可. 12.另一个错误是没有选择开发team,如下图选择即可 13.这个错误是因为在Unity原文件中写了必须要实现的方法(这个根据你的项目而定该实现哪种方法),我的将写好的代码文件直接拖进Xcode中即可. 14.需要解决上一步的错误问文件:(文件根据具体工程的调用方法而定) 15.设置Xcode Build Settings,此处是为了解决Unity导出的 Xcode 工程和 cocoapods 的配置不兼容的问题,就是上面 pod install 第三方库的时候报的警告问题: 如下图,我想导入 Masonry的头文件,但是不能导入,此时虽然我们的第三方框架安装了,但是还无法使用 16.将项目设置为Release状态下: 17.在Build Settings下设置 HEADER_SEARCH_PATHS,添加一项并设置为:$(inherited) 并依次在Build Settings下设置: OTHER_CFLAGS, OTHER_LDFLAGS;并且都把值设置为:$(inherited) 19.将自己的项目拖入到 Xcode导出的工程,注意只需要将根目录下的那个你写代码的文件夹拖进去即可,里面包含了你写的所有代码:如下图所示 20.这一步不同的项目会有不同,目的是跳转到我们用Xcode写的原生控制器中,主要代码如下:12345if (_mapVC == nil) &#123; _mapVC = [[BTMapVC alloc]init]; &#125; UnityPause(true); [UnityGetGLViewController() presentViewController:_mapVC animated:NO completion:nil]; 如下图所示: 21.发现一大堆错误,是因为我用了 pch 文件,而将 pch 文件拖入到新工程里,此时需要设置 pch 文件路径,这里我是将 Unity 导出的 Xcode 工程的 pch 文件里的内容复制到原生的 pch 文件里,然后再设置原生 pch 文件的路径,你也可以尝试将原生工程的 pch 文件内容复制到 Unity 导出工程的 pch 文件里:如下图 22.我们将原生工程文件拖进 Unity 导出的 Xcode 工程后,一个工程就出现了两个main文件,一个是 main.m,一个是 main.mm,会报错如下图,因为我们是以 Unity 为主的项目,因此删除掉 main.m 23.如果出现以下错误可能是因为你没有将 Unity导出的 Xcode 工程的 pch 文件内容复制到你设置的 pch 文件里,报错如下图 24.我开发的原生项目是LBS,跳转的时候会进行定位,需要设置几个选项,如果不设置跳转的时候会崩溃: 设置Background Mode,并在 Info.plist 设置: NSLocationWhenInUseUsageDescription或者 NSLocationAlwaysUsageDescription 25.在跳转到原生工程界面的时候要将 Unity 暂停,在从原生跳回 Unity 界面时要将Unity 取消暂停,主要代码和图如下:123[self dismissViewControllerAnimated:NO completion:^&#123; UnityPause(false); &#125;]; 如下图所示: 26.因为是游戏要设置全局横屏,代码和图如下:1234// 设置全局横屏- (UIInterfaceOrientationMask)application:(UIApplication *)application supportedInterfaceOrientationsForWindow:(UIWindow *)window &#123; return UIInterfaceOrientationMaskLandscapeRight;&#125; 27.如果在Unity导出 Xcode 工程时,你的 Bundle Identifier 和在高德注册的不一致,这里需要修改 Bundle Identifier,如下图: 28.如果报错ApiKey,需要在 UnityAppController进行设置,代码和图如下:1234567891011121314#warning 这个地方设置 apiKey //*****************************************// // 解决地图呈现网格问题 [[AMapServices sharedServices] setEnableHTTPS:YES]; if ([APIKey length] == 0) &#123; NSString *reason = [NSString stringWithFormat:@"apiKey为空，请检查key是否正确设置。"]; UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:reason delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil, nil]; [alert show]; &#125; [AMapServices sharedServices].apiKey = (NSString *)APIKey; //*****************************************// ###2017年7月13日更新:前段时间Unity导出的il2cpp模式的工程在登录时无法加载场景,因此这段时间以来都是在mono2x模式下进行写的代码,随着最近一次更新,导出的Xcode文件报错: Unable to insert branch island. No insertion point available. for architecture armv7 网上说是由于导出的Xcode文件:Data/Managed/Assembly-CSharp.dll的文件过大导致的(上次3.4M,只比上次更新大了0.1M),说是让拆代码进行解决,暂时未处理,打算继续回归il2cpp模式,将加载场景的代码进行注释,因为我的开发是LBS部分,只需要能和Unity进行通讯即可继续开发(等待拆代码中….)]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Mac-终端操作]]></title>
      <url>%2F2017%2F10%2F24%2FMac-%E7%BB%88%E7%AB%AF%E6%93%8D%E4%BD%9C%2F</url>
      <content type="text"><![CDATA[####1.打开终端，输入： 隐藏文件:1defaults write com.apple.finder AppleShowAllFiles -bool true 显示隐藏文件:1defaults write com.apple.finder AppleShowAllFiles -bool true 命令运行之后需要重新加载Finder：快捷键 option+command+esc，选中Finder，重新启动即可 ####2.打开多个Unity工程:12终端输入:open -n /Applications/Unity/Unity.app Xcode8 注释快捷键失效:121. 终端运行： sudo /usr/libexec/xpccachectl2. 重新打开Xcode,如果不行,则重启电脑]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[算法(一)]]></title>
      <url>%2F2017%2F10%2F24%2F%E7%AE%97%E6%B3%95(%E4%B8%80)%2F</url>
      <content type="text"><![CDATA[以下算法参考 &lt;&lt;算法&gt;&gt; 第4版[美] Robert Sedgewick #####1. 欧几里德算法123456789101112131415161718192021- (void)viewDidLoad &#123; [super viewDidLoad]; [self calculateGreatestCommonDivisorP:30 q:6]; //欧几里德算法:求两个数的最大公约数&#125;#pragma mark - 欧几里德算法/** 计算两个非负整数 p 和 q 的最大公约数:若 q 是 0，则最大公约数为 p。否则，将 p 除以 q得到余数r，p和q的最大公约数即为q和 r 的最大公约数。 greatest common divisor: 最大公因子 */- (int)calculateGreatestCommonDivisorP:(int)p q:(int)q &#123; NSLog(@"p 和 q 的最大公约数============ %d", gcd(p, q)); return gcd(p,q);&#125;int gcd (int p, int q) &#123; if (q == 0) &#123; return p; &#125; int r = p % q; return gcd(q, r);&#125; #####2. 找出数组中组大的元素1234567891011121314151617- (void)viewDidLoad &#123; [super viewDidLoad]; NSArray *array = @[@2.6, @3, @9.6, @8, @5, @6]; [self getMaxNumInArray:array]; //找出数组中组大的元素&#125;- (NSNumber *)getMaxNumInArray:(NSArray *)array &#123; double max = [array[0] doubleValue]; for (int i = 1; i &lt; array.count; i ++) &#123; if ([array[i] doubleValue] &gt; max) &#123; max = [array[i] doubleValue]; &#125; &#125; NSLog(@"MaxNumInArray===========%@", @(max)); return @(max);&#125;注:这里不能直接用 NSNumber, 直接用 NSNumber 浮点数会出错. #####3. 计算数组元素的平均值12345678910111213141516- (void)viewDidLoad &#123; [super viewDidLoad]; NSArray *array = @[@2.6, @3, @9.6, @8, @5, @6]; [self calculateAverageInArray:array]; // 计算数组元素的平均值&#125;- (NSNumber *)calculateAverageInArray:(NSArray *)array &#123; NSInteger length = array.count; double sum = 0.0; double average = 0.0; for (NSInteger i = 0; i &lt; length; i ++) &#123; sum += [array[i] doubleValue]; average = sum / length; &#125; NSLog(@"calculateAverage===========%@", @(average)); return @(average);&#125; #####4. 复制数组 ######注:示例数组中是NSNumber类型元素,其它类型需要另写方法12345678910111213- (void)viewDidLoad &#123; [super viewDidLoad]; [self copyArray:array]; // 复制数组:示例数组中是数字&#125;- (NSArray *)copyArray:(NSArray *)array &#123; NSInteger length = array.count; NSMutableArray * copyArrayM = [NSMutableArray array]; for (NSInteger i = 0; i &lt; length; i ++) &#123; copyArrayM[i] = array[i]; &#125; NSArray *copyArray = copyArrayM; return copyArray;&#125; #####5. 颠倒数组元素的顺序123456789101112131415161718- (void)viewDidLoad &#123; [super viewDidLoad]; [self reverseArray:array]; // 颠倒数组元素的顺序&#125;- (NSArray *)reverseArray:(NSArray *)array &#123; NSInteger N = array.count; NSMutableArray *arrayM = [NSMutableArray array]; for (NSInteger i = 0; i &lt; N; i ++) &#123; [arrayM addObject:array[i]]; &#125; for (NSInteger i = 0; i &lt; N/2; i++) &#123; NSNumber *temp = arrayM[i]; arrayM[i] = arrayM[N-1-i]; arrayM[N-i-1] = temp; &#125; array = arrayM; return array;&#125; ———–典型静态方法的实现————- #####6. 计算一个数的绝对值:浮点数和整数12345678910111213- (void)viewDidLoad &#123; [super viewDidLoad]; NSNumber *numAbs = [self calculateNumAbs:-234]; NSLog(@"calculateDoubleAbs========%@", numAbs);&#125;- (NSNumber *)calculateNumAbs:(double)x &#123; if (x&lt;0.0) &#123; return @(-x); &#125; else &#123; return @(x); &#125;&#125; #####7. 判定一个数是否是素数:prime number12345678910111213141516- (void)viewDidLoad &#123; [super viewDidLoad]; BOOL isPrime = [self isPrime:17]; // 判定一个数是否是素数 NSLog(@"isPrime===========%d", isPrime);&#125;- (BOOL)isPrime:(NSInteger)N &#123; if (N &lt; 2) &#123; return false; &#125; for (NSInteger i = 2; i*i &lt;= N; i++) &#123; if (N % i == 0) &#123; return false; &#125; &#125; return true;&#125; #####8. 计算平方根(牛顿迭代法)12345678910111213141516- (void)viewDidLoad &#123; [super viewDidLoad]; double numSqrt = [self calculateSqrt:-1]; NSLog(@"numSqrt=========%f", numSqrt);&#125;- (double)calculateSqrt:(double)c &#123; if (c &lt; 0) &#123; return NAN; &#125; double err = 1e-15; double t = c; while (fabs(t - c/t) &gt; err * t) &#123; t = (c/t + t) / 2.0; &#125; return t;&#125; #####9. 计算直角三角形的斜边12345678- (void)viewDidLoad &#123; [super viewDidLoad]; double hypotenuse = [self calculateHypotenuse:5 :12]; NSLog(@"hypotenuse=========%f", hypotenuse);&#125;- (double)calculateHypotenuse:(double)a :(double)b &#123; return sqrt(a*a + b*b);&#125; #####10. 计算调和级数123456789101112- (void)viewDidLoad &#123; [super viewDidLoad]; double HarmonicSeries = [self calculateHarmonicSeries:5]; NSLog(@"HarmonicSeries=========%f", HarmonicSeries);&#125;- (double)calculateHarmonicSeries:(NSInteger)N &#123; double sum = 0.0; for (int i = 1; i &lt;= N; i++) &#123; sum += 1.0 / i; &#125; return sum;&#125; #####11. 二分查找的递归实现12345678910111213141516171819202122232425262728293031注: 二分查找的递归实现: 数组内数字大小是有序的(从大到小)- (void)viewDidLoad &#123; [super viewDidLoad]; NSArray *intArray = @[@2, @3, @4, @10, @19, @20]; NSInteger rankNum = [self rank:20 :intArray]; NSLog(@"rankNum=========%ld", (long)rankNum);&#125;- (NSInteger)rank:(NSInteger)key :(NSArray&lt;NSNumber *&gt; *)array &#123; return [self rank:key :array :0 :array.count - 1];&#125;- (NSInteger)rank:(NSInteger)key :(NSArray *)array :(NSInteger)low :(NSInteger)high &#123; //如果key存在于a[]中，它的索引不会小于low且不会大于high if (low &gt; high) &#123; return -1; &#125; NSInteger mid = low + (high - low) / 2; if (key &lt; [array[mid] integerValue]) &#123; //若小于array[mid],则往前查找 return [self rank:key :array :low :mid-1]; &#125; else if (key &gt; [array[mid] integerValue]) &#123; //若大于array[mid],则往后查找 return [self rank:key :array :mid+1 :high]; &#125; else &#123; return mid; &#125;&#125;关于递归:编写递归代码时最重要的有以下三点1. 递归总有一个最简单的情况——方法的第一条语句总是一个包含 return 的条件语句。2. 递归调用总是去尝试解决一个规模更小的子问题，这样递归才能收敛到最简单的情况。上面的代码中，第四个参数和第三个参数的差值一直在缩小。3. 递归调用的父问题和尝试解决的子问题之间不应该有交集。上面的代码中，两个子问题各自操作的数组部分是不同的。 ———–随机数——— #####12. 随机返回 [a,b) 之间的一个 double 值123456789- (void)viewDidLoad &#123; [super viewDidLoad]; double doubleRandom = [self uniform:1 :3]; NSLog(@"doubleRandom=========%f", doubleRandom);&#125;- (double)uniform:(double)a :(double)b &#123; #define ARC4RANDOM_MAX 1000000 return a + ((double)(arc4random()%ARC4RANDOM_MAX)/ARC4RANDOM_MAX) * (b-a);&#125; #####13. 随机返回 [0,N-1] 之间的整数,值域:[0,N-1]12345678- (void)viewDidLoad &#123; [super viewDidLoad]; NSInteger intRandomZeroToHigh = [self arc4randomHigh:5]; NSLog(@"intRandomZeroToHigh=========%ld", (long)intRandomZeroToHigh);&#125;- (NSInteger)arc4randomHigh:(NSInteger)high &#123; return arc4random() % high;&#125; #####14. 随机返回 [low,high-1] 之间的整数,值域:[low,high]12345678- (void)viewDidLoad &#123; [super viewDidLoad]; NSInteger intRandomLowToHigh = [self arc4randomLow:3 high:5]; NSLog(@"intRandomLowToHigh=========%ld", (long)intRandomLowToHigh);&#125;- (NSInteger)arc4randomLow:(NSInteger)low high:(NSInteger)high &#123; return low + arc4random() % (high-low);&#125; #####15. 根据离散概率随机返回的 int 值(出现 i 的概率为 a[i])12345678910111213141516171819- (void)viewDidLoad &#123; [super viewDidLoad]; NSArray *discreteArray = @[@0.2,@0.09,@0.3,@0.11,@0.3]; // a[]中各元素之和必须等于1 NSInteger discrete = [self discrete:discreteArray]; NSLog(@"discrete=======%zd", discrete);&#125;- (NSInteger)discrete:(NSArray *)array &#123; // a[]中各元素之和必须等于1 #define ARC4RANDOM_MAX 1000000 double r = (double)(arc4random()%ARC4RANDOM_MAX)/ARC4RANDOM_MAX; // [0,1)随机数 double sum = 0.0; for (NSInteger i = 0; i &lt; array.count; i++) &#123; sum = sum + [array[i] doubleValue]; if (sum &gt;= r) &#123; return i; &#125; &#125; return -1;&#125; #####16. 随机将 double 数组中的元素排序12345678910111213141516171819202122- (void)viewDidLoad &#123; [super viewDidLoad]; NSArray *beforeShuffleArray = @[@2,@10.09,@2.3,@0.11,@6.3]; NSArray *afterShuffleArray = [self shuffle:beforeShuffleArray]; NSLog(@"afterShuffleArray = %@", afterShuffleArray);&#125;/// 随机将 double 数组中的元素排序- (NSMutableArray *)shuffle:(NSArray *)array &#123; NSMutableArray *arrayM = [NSMutableArray array]; for (NSNumber *num in array) &#123; [arrayM addObject:num]; &#125; NSInteger N = arrayM.count; for (NSInteger i = 0; i &lt; N; i++) &#123; // 将a[i]和a[i..N-1]中任意一个元素交换 NSInteger r = i + arc4random() % (N-i); double temp = [arrayM[i] doubleValue]; arrayM[i] = arrayM[r]; arrayM[r] = @(temp); &#125; return arrayM;&#125;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[游戏开发笔记2(iOS)]]></title>
      <url>%2F2017%2F05%2F07%2FLBS001%2F</url>
      <content type="text"><![CDATA[概览: 字典的映射 数据管理工具 yymodel的使用及yymodel中关于description关键字的处理 网络请求数据的处理 字符串和整型的相互转化 关于LBS上annotationView添加的逻辑处理 自定义modal转场的实现 高德地图添加annotationView时的布局约束bug：需要为annotationView指定在屏幕上的坐标点 数据在同一个控制器传递时能用局部变量就不要用全局变量，全局变量容易引起bug]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Objective-C语法笔记]]></title>
      <url>%2F2017%2F04%2F04%2FObjective-C%E8%AF%AD%E6%B3%95%E7%AC%94%E8%AE%B0%2F</url>
      <content type="text"><![CDATA[1.运行时 1运行时函数 objc_msgSend: 给谁发送消息，对象 (指针本质上就是内存地址) 2.在控制台(console)输入 di 可以进行 OC 的反编译 3.对象存储 1234567对象方法中:通过对象的地址告诉对象去指向xxx的方法1.对象创建完成后会在内存开辟一个地址专门存储这个对象,2.给这个对象赋值的时候实际上是通过地址来告诉对象去执行 set 方法3.要发送消息是必须要拿到当前对象的指针地址4.在程序中经常会出现 self,self表明是当前对象,对象已经创建,self就是为了拿到当前对象地止,以便发送消息,self.view,实际上是[self view];,调用的是 get 方法5.在 init 方法中不要写 self. ,要用成员变量下划线,6.在 init 方法中,如果要访问父类的属性,同样要用 self. ,表示当前对象是子类 123类方法中1.self 表示本类2.在 OC 中,类本质上也是一个对象]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[GridViewLayout 九宫格布局]]></title>
      <url>%2F2017%2F04%2F03%2FGridViewLayout%2F</url>
      <content type="text"><![CDATA[#随笔 纯代码加载自定义视图: 1234567891011// 在控制器创建自定义视图对象后直接加载自定义视图:- (instancetype)initWithFrame:(CGRect)frame &#123; self = [super initWithFrame:frame]; if (self) &#123; [self setupUI]; &#125; return self;&#125;- (void)setupUI &#123; &#125; 2.加载 XIB 的两种方式:注意:加载nib时返回的是数组,因此要在后面加上: .lastObject 12345第一种:- (void)setupUI &#123; UIView *view = [[NSBundle mainBundle] loadNibNamed:@"xib视图类名" owner:nil options:nil].lastObject; [self.view addSubview:view];&#125; 1234第二种:内存优化后的加载方式UINib *nib = [UINib nibWithNibName:@"xib视图类名" bundle:nil]; UIView *view = [nib instantiateWithOwner:nil options:nil].lastObject; [self.view addSubview:view]; 123456789101112131415号外: 开发中自定义 XIB 时的常用写法: 通过类方法加载1. 在自定义 HLXibView.h 文件中 定义类方法 + (instancetype) loadXibView;2. 在 HLXibView.m 中实现类方法: + (instancetype) loadXibView &#123; UINib *nib = [UINib nibWithNibName:@"HLXibView" bundle:nil]; return [nib instantiateWithOwner:nil options:nil].lastObject;&#125;3. 在控制器中 导入头文件 #import "HLXibView.h" 并且调用类方法 - (void)setupUI &#123; HLXibView *view = [HLXibView loadXibView]; [self.view addSubview:view];&#125; 3.九宫格 gridView 布局 123456789101112131415161718192021222324252627282930313233- (void)setupUI &#123; NSInteger count = 12; NSMutableArray *gridViews = [NSMutableArray array]; for (NSInteger i = 0; i &lt; count; i++) &#123; HLXibView *appView = [HLXibView loadXibView]; // 1&gt; 添加到视图 [self.view addSubview:appView]; // 2&gt; 添加到数组 [gridViews addObject:appView]; &#125; // 每行的视图个数 NSInteger rowCount = 3; // 视图的大小 CGSize viewSize = self.view.bounds.size; CGSize itemSize = [HLXibView loadXibView].bounds.size; // 计算间距 CGFloat margin = (viewSize.width - rowCount * itemSize.width) / (rowCount + 1); // 2&gt; 九宫格布局 for (NSInteger i = 0; i &lt; count; i++) &#123; // 计算行和列 NSInteger row = i / rowCount; NSInteger col = i % rowCount; NSLog(@"row %zd col %zd", row, col); // 计算偏移量 CGFloat xOffset = col * (itemSize.width + margin) + margin; CGFloat yOffset = row * (itemSize.height + margin) + margin; HLXibView *view = gridViews[i]; view.frame = CGRectOffset(view.bounds, xOffset, yOffset); &#125;&#125;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[使用手册 - iOS开发常用工具]]></title>
      <url>%2F2017%2F03%2F25%2F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C%20-%20iOS%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%2F</url>
      <content type="text"><![CDATA[iOS开发常用工具使用手册一、索引### Sketch 中文]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[游戏开发笔记(iOS)]]></title>
      <url>%2F2017%2F02%2F18%2FiOS%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%2F</url>
      <content type="text"><![CDATA[1. 相册管理123456789101112131415161718192021222324将截图存入相册时需要在 Info.plist 中添加设置: Privacy - Photo Library Usage Description例如: 集成高德地图后将地图截图存入到相册:// 地图截屏- (void)gaodeMapSnapshotScreen &#123;[self.mapView takeSnapshotInRect:self.view.bounds];__block UIImage *screenshotImage = nil;__block NSInteger resState = 0;[self.mapView takeSnapshotInRect:self.view.bounds withCompletionBlock:^(UIImage *resultImage, NSInteger state) &#123;screenshotImage = resultImage;resState = state; // state表示地图此时是否完整，0-不完整，1-完整&#125;];self.snapImage = screenshotImage; // 获取地图截图图片UIImageWriteToSavedPhotosAlbum(self.snapImage, self, @selector(image:didFinishSavingWithError:contextInfo:), nil); // 存到相册方法&#125;// 是否完成保存到相册- (void)image:(UIImage *)image didFinishSavingWithError:(NSError *)error contextInfo:(void *)contextInfo&#123;if (error == nil) &#123;UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:@"截图成功,已存入相册!\n请打开手机相册查看\n🙂🙂🙂" delegate:self cancelButtonTitle:nil otherButtonTitles:@"确定", nil];[alert show];&#125;else&#123;UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:@"保存失败" delegate:self cancelButtonTitle:nil otherButtonTitles:@"确定", nil];[alert show];&#125;&#125; 2.高德地图11. [高德地图获取自有数据](http://lbs.amap.com/api/ios-sdk/guide/map-data/cloud-poi#local) 2. QMUI的使用(二) - iOS幽灵按钮ghostButtoniOS开发UI组件腾讯QMUI框架(iOS)介绍1. 幽灵按钮的使用 实现上面效果的代码:123456789101112131415161718192021222324252627282930313233- (void)initSubviews &#123;[super initSubviews];self.ghostButton1 = [[QMUIGhostButton alloc]initWithGhostType:QMUIGhostButtonColorBlue];self.ghostButton1.titleLabel.font = UIFontMake(14);[self.ghostButton1 setTitle:@"QMUIGhostButtonColorBlue" forState:UIControlStateNormal];self.ghostButton1.cornerRadius = 20; // 默认为按钮高度的一半,改变数值以改变圆角大小[self.view addSubview:self.ghostButton1];self.ghostButton2 = [[QMUIGhostButton alloc]init];self.ghostButton2.ghostColor = [UIColor grayColor]; // 自定义幽灵按钮的颜色(这里不是QMUI的枚举颜色)self.ghostButton2.titleLabel.font = UIFontMake(14);[self.ghostButton2 setTitle:@"QMUIGhostButtonColorRed" forState:UIControlStateNormal];[self.view addSubview:self.ghostButton2];self.separatorLayer1 = [QDCommonUI generateSeparatorLayer];[self.view.layer addSublayer:self.separatorLayer1];self.separatorLayer2 = [QDCommonUI generateSeparatorLayerColorBlue]; // 如果要改变分割线的颜色,在QDCommonUI文件中添加类对应的方法即可.[self.view.layer addSublayer:self.separatorLayer2];&#125;- (void)viewDidLayoutSubviews &#123;[super viewDidLayoutSubviews];CGFloat contentMinY = CGRectGetMaxY(self.navigationController.navigationBar.frame);CGFloat buttonSpacingHeight = 72;CGSize buttonSize = CGSizeMake(260, 40);CGFloat buttonMinX = CGFloatGetCenter(CGRectGetWidth(self.view.bounds), buttonSize.width);CGFloat buttonOffsetY = CGFloatGetCenter(buttonSpacingHeight, buttonSize.height);self.ghostButton1.frame = CGRectFlatMake(buttonMinX, contentMinY + buttonOffsetY, buttonSize.width, buttonSize.height);self.ghostButton2.frame = CGRectFlatMake(buttonMinX, contentMinY + buttonSpacingHeight + buttonOffsetY, buttonSize.width, buttonSize.height);self.separatorLayer1.frame = CGRectMake(0, contentMinY + buttonSpacingHeight - PixelOne, CGRectGetWidth(self.view.bounds), PixelOne);self.separatorLayer2.frame = CGRectMake(0, contentMinY + buttonSpacingHeight * 2 - PixelOne, CGRectGetWidth(self.view.bounds), PixelOne);&#125; 还支持设置带有图片的幽灵按钮,图片可以通过枚举类型设置图片在按钮标题的上左下右,支持设置图片和标题的间隔,具体代码如下:123456789self.ghostButton3 = [[QMUIGhostButton alloc] initWithGhostType:QMUIGhostButtonColorGreen];self.ghostButton3.titleLabel.font = UIFontMake(14);[self.ghostButton3 setTitle:@"点击修改ghostColor" forState:UIControlStateNormal];[self.ghostButton3 setImage:UIImageMake(@"icon_emotion") forState:UIControlStateNormal];self.ghostButton3.imageEdgeInsets = UIEdgeInsetsMake(0, 6, 0, 0); //设置图片和标题的间隔self.ghostButton3.imagePosition = QMUIButtonImagePositionRight; //默认为QMUIButtonImagePositionLeftself.ghostButton3.adjustsImageWithGhostColor = YES;[self.ghostButton3 addTarget:self action:@selector(handleGhostButtonColorEvent) forControlEvents:UIControlEventTouchUpInside];[self.view addSubview:self.ghostButton3]; 效果如下:]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[MacDown]]></title>
      <url>%2F2016%2F11%2F07%2FHelpForMacDown%2F</url>
      <content type="text"><![CDATA[MacDown Hello there! I’m MacDown, the open source Markdown editor for OS X. Let me introduce myself. Markdown and IMarkdown is a plain text formatting syntax created by John Gruber, aiming to provide a easy-to-read and feasible markup. The original Markdown syntax specification can be found here. MacDown is created as a simple-to-use editor for Markdown documents. I render your Markdown contents real-time into HTML, and display them in a preview panel. I support all the original Markdown syntaxes. But I can do so much more! Various popular but non-standard syntaxes can be turned on/off from the Markdown preference pane. You can specify extra HTML rendering options through the Rendering preference pane. You can customize the editor window to you liking in the Editor preferences pane: You can configure various application (that’s me!) behaviors in the General preference pane. The BasicsBefore I tell you about all the extra syntaxes and capabilities I have, I’ll introduce you to the basics of standard markdown. If you already know markdown, and want to jump straight to learning about the fancier things I can do, I suggest you skip to the Markdown preference pane. Lets jump right in. Line BreaksTo force a line break, put two spaces and a newline (return) at the end of the line. This two-line bulletwon’t break This two-line bulletwill break Here is the code: 12345* This two-line bullet won't break* This two-line bullet will break Strong and EmphasizeStrong: **Strong** or __Strong__ (Command-B)Emphasize: *Emphasize* or _Emphasize_[^emphasize] (Command-I) Headers (like this one!)Header 1 ======== Header 2 -------- or # Header 1 ## Header 2 ### Header 3 #### Header 4 ##### Header 5 ###### Header 6 Links and EmailInlineJust put angle brackets around an email and it becomes clickable: &#x75;&#114;&#x61;&#x6e;&#117;&#x73;&#106;&#114;&#64;&#x67;&#109;&#x61;&#105;&#x6c;&#46;&#99;&#x6f;&#109;&lt;uranusjr@gmail.com&gt; Same thing with urls: http://macdown.uranusjr.com&lt;http://macdown.uranusjr.com&gt; Perhaps you want to some link text like this: Macdown Website[Macdown Website](http://macdown.uranusjr.com &quot;Title&quot;) (The title is optional) Reference styleSometimes it looks too messy to include big long urls inline, or you want to keep all your urls together. Make a link [a link][arbitrary_id] then on it’s own line anywhere else in the file:[arbitrary_id]: http://macdown.uranusjr.com &quot;Title&quot; If the link text itself would make a good id, you can link like this [like this][], then on it’s own line anywhere else in the file:[like this]: http://macdown.uranusjr.com ImagesInline![Alt Image Text](path/or/url/to.jpg &quot;Optional Title&quot;) Reference style![Alt Image Text][image-id]on it’s own line elsewhere:[image-id]: path/or/url/to.jpg &quot;Optional Title&quot; Lists Lists must be preceded by a blank line (or block element) Unordered lists start each item with a * - works too Indent a level to make a nested list Ordered lists are supported. Start each item (number-period-space) like 1. It doesn’t matter what number you use, I will render them sequentially So you might want to start each line with 1. and let me sort it out Here is the code: 12345678* Lists must be preceded by a blank line (or block element)* Unordered lists start each item with a `*`- `-` works too * Indent a level to make a nested list 1. Ordered lists are supported. 2. Start each item (number-period-space) like `1. ` 42. It doesn't matter what number you use, I will render them sequentially 1. So you might want to start each line with `1.` and let me sort it out Block Quote Angle brackets &gt; are used for block quotes.Technically not every line needs to start with a &gt; as long asthere are no empty lines between paragraphs.Looks kinda ugly though. Block quotes can be nested. Multiple Levels Most markdown syntaxes work inside block quotes. Lists Links Etc. Here is the code: 123456789101112&gt; Angle brackets `&gt;` are used for block quotes. Technically not every line needs to start with a `&gt;` as long asthere are no empty lines between paragraphs. &gt; Looks kinda ugly though.&gt; &gt; Block quotes can be nested. &gt; &gt; &gt; Multiple Levels&gt;&gt; Most markdown syntaxes work inside block quotes.&gt;&gt; * Lists&gt; * [Links][arbitrary_id]&gt; * Etc. Inline CodeInline code is indicated by surrounding it with backticks:`Inline code` If your code has `backticks` that need to be displayed, you can use double backticks:``Code with `backticks` `` ```` (mind the spaces preceding the final set of backticks)1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950### Block CodeIf you indent at least four spaces or one tab, I&apos;ll display a code block. print(&apos;This is a code block&apos;) print(&apos;The block must be preceded by a blank line&apos;) print(&apos;Then indent at least 4 spaces or 1 tab&apos;) print(&apos;Nesting does nothing. Your code is displayed Literally&apos;)I also know how to do something called [Fenced Code Blocks](#fenced-code-block) which I will tell you about later.### Horizontal RulesIf you type three asterisks `***` or three dashes `---` on a line, I&apos;ll display a horizontal rule:***## &lt;a name=&quot;markdown-pane&quot;&gt;&lt;/a&gt;The Markdown Preference PaneThis is where I keep all preferences related to how I parse markdown into html. ![Markdown preferences pane](http://d.pr/i/RQEi+)### Document FormattingThe ***Smartypants*** extension automatically transforms straight quotes (`&quot;` and `&apos;`) in your text into typographer’s quotes (`“`, `”`, `‘`, and `’`) according to the context. Very useful if you’re a typography freak like I am. Quote and Smartypants are syntactically incompatible. If both are enabled, Quote takes precedence.### Block Formatting#### TableThis is a table:First Header | Second Header------------- | -------------Content Cell | Content CellContent Cell | Content CellYou can align cell contents with syntax like this:| Left Aligned | Center Aligned | Right Aligned ||:------------- |:---------------:| -------------:|| col 3 is | some wordy text | $1600 || col 2 is | centered | $12 || zebra stripes | are neat | $1 |The left- and right-most pipes (`|`) are only aesthetic, and can be omitted. The spaces don’t matter, either. Alignment depends solely on `:` marks.#### &lt;a name=&quot;fenced-code-block&quot;&gt;Fenced Code Block&lt;/a&gt;This is a fenced code block: print(‘Hello world!’)1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071You can also use waves (`~`) instead of back ticks (`` ` ``):~~~print('Hello world!')~~~You can add an optional language ID at the end of the first line. The language ID will only be used to highlight the code inside if you tick the ***Enable highlighting in code blocks*** option. This is what happens if you enable it:![Syntax highlighting example](http://d.pr/i/9HM6+)I support many popular languages as well as some generic syntax descriptions that can be used if your language of choice is not supported. See [relevant sections on the official site](http://macdown.uranusjr.com/features/) for a full list of supported syntaxes.### Inline FormattingThe following is a list of optional inline markups supported:Option name | Markup | Result if enabled |--------------------|------------------|-----------------------|Intra-word emphasis | So A\*maz\*ing | So A&lt;em&gt;maz&lt;/em&gt;ing |Strikethrough | \~~Much wow\~~ | &lt;del&gt;Much wow&lt;/del&gt; |Underline [^under] | \_So doge\_ | &lt;u&gt;So doge&lt;/u&gt; |Quote [^quote] | \"Such editor\" | &lt;q&gt;Such editor&lt;/q&gt; |Highlight | \==So good\== | &lt;mark&gt;So good&lt;/mark&gt; |Superscript | hoge\^(fuga) | hoge&lt;sup&gt;fuga&lt;/sup&gt; |Autolink | http://t.co | &lt;http://t.co&gt; |Footnotes | [\^4] and [\^4]: | [^4] and footnote 4 |[^4]: You don't have to use a number. Arbitrary things like `[^footy note4]` and `[^footy note4]:` will also work. But they will *render* as numbered footnotes. Also, no need to keep your footnotes in order, I will sort out the order for you so they appear in the same order they were referenced in the text body. You can even keep some footnotes near where you referenced them, and collect others at the bottom of the file in the traditional place for footnotes. ## &lt;a name="rendering-pane"&gt;&lt;/a&gt;The Rendering Preference PaneThis is where I keep preferences relating to how I render and style the parsed markdown in the preview window. ![Rendering preferences pane](http://d.pr/i/rT4d+)### CSSYou can choose different css files for me to use to render your html. You can even customize or add your own custom css files.### Syntax HighlightingYou have already seen how I can syntax highlight your fenced code blocks. See the [Fenced Code Block](#fenced-code-block) section if you haven’t! You can also choose different themes for syntax highlighting.### TeX-like Math SyntaxI can also render TeX-like math syntaxes, if you allow me to.[^math] I can do inline math like this: \\( 1 + 1 \\) or this (in MathML): &lt;math&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/math&gt;, and block math:\\[ A^T_S = B\\]or (in MathML)&lt;math display="block"&gt; &lt;msubsup&gt;&lt;mi&gt;A&lt;/mi&gt; &lt;mi&gt;S&lt;/mi&gt; &lt;mi&gt;T&lt;/mi&gt;&lt;/msubsup&gt; &lt;mo&gt;=&lt;/mo&gt; &lt;mi&gt;B&lt;/mi&gt;&lt;/math&gt;### Task List Syntax1. [x] I can render checkbox list syntax * [x] I support nesting * [x] I support ordered *and* unordered lists2. [ ] I don't support clicking checkboxes directly in the html window### Jekyll front-matterIf you like, I can display Jekyll front-matter in a nice table. Just make sure you put the front-matter at the very beginning of the file, and fence it with `---`. For example: title: “Macdown is my friend” date: 2014-06-06 20:00:00``` Render newline literallyNormally I require you to put two spaces and a newline (aka return) at the end of a line in order to create a line break. If you like, I can render a newline any time you end a line with a newline. However, if you enable this, markdown that looks lovely when I render it might look pretty funky when you let some other program render it. The General Preferences PaneThis is where I keep preferences related to application behavior. The General Preferences Pane allows you to tell me how you want me to behave. For example, do you want me to make sure there is a document open when I launch? You can also tell me if I should constantly update the preview window as you type, or wait for you to hit command-R instead. Maybe you prefer your editor window on the right? Or to see the word-count as you type. This is also the place to tell me if you are interested in pre-releases of me, or just want to stick to better-tested official releases. The Editor Preference PaneThis is where I keep preferences related to the behavior and styling of the editing window. StylingMy editor provides syntax highlighting. You can edit the base font and the coloring/sizing theme. I provided some default themes (courtesy of Mou’s creator, Chen Luo) if you don’t know where to start. You can also edit, or even add new themes if you want to! Just click the Reveal button, and start moving things around. Remember to use the correct file extension (.styles), though. I’m picky about that. I offer auto-completion and other functions to ease your editing experience. If you don’t like it, however, you can turn them off. Hack OnThat’s about it. Thanks for listening. I’ll be quiet from now on (unless there’s an update about the app—I’ll remind you for that!). Happy writing! [^emphasize]: If Underlines is turned on, _this notation_ will render as underlined instead of emphasized [^under]: If Underline is disabled _this_ will be rendered as emphasized instead of being underlined. [^quote]: Quote replaces literal &quot; characters with html &lt;q&gt; tags. Quote and Smartypants are syntactically incompatible. If both are enabled, Quote takes precedence. Note that Quote is different from blockquote, which is part of standard Markdown. [^math]: Internet connection required.]]></content>
    </entry>

    
  
  
</search>
